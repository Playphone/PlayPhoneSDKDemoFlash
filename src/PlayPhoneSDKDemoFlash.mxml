<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:views="views.*" xmlns:hcode="hcode.*"
               initialize="initializeHandler(event)" width="100%" height="100%">
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>

    <s:states>
        <s:State name="Home"/>
        <s:State name="Login"/>
        <s:State name="Dashboard"/>
        <s:State name="VEconomy"/>
        <s:State name="Achievements"/>
        <s:State name="DashboardControl"/>
        <s:State name="Leaderboards"/>
        <s:State name="Cloud"/>
        <s:State name="Userinfo"/>
        <s:State name="Social"/>
        <s:State name="RoomCookies"/>
        <s:State name="AppInfo"/>
        <s:State name="Multinet"/>
        <s:State name="Settings"/>
    </s:states>

    <s:Group
            includeIn="Login, Dashboard, VEconomy, Achievements, DashboardControl, Leaderboards, Cloud, Userinfo, Social, AppInfo, Settings, RoomCookies, Multinet"
            width="100%">
        <s:Button label="Go home" left="5" top="5" click="currentState='Home'"/>
    </s:Group>

    <s:Panel includeIn="Home" width="100%" height="100%" title="Home">
        <s:VGroup width="100%" height="100%">
            <s:List id="list" width="100%" height="100%" change="onIndexChange(event)">
                <s:itemRenderer>
                    <fx:Component>
                        <s:ItemRenderer>
                            <s:states>
                                <s:State name="normal"/>
                                <s:State name="selected"/>
                            </s:states>
                            <s:Rect height="50" width="100%">
                                <s:fill>
                                    <s:SolidColor color="0x999999" alpha="0" alpha.selected="0.6"/>
                                </s:fill>
                                <s:stroke>
                                    <s:SolidColorStroke color="0xcccccc" weight="1"/>
                                </s:stroke>
                            </s:Rect>
                            <s:Label paddingLeft="10" id="caption" verticalAlign="middle" width="100%" height="50"/>
                            <fx:Script><![CDATA[
                                override public function set data(value: Object): void
                                {
                                    caption.text = value.caption;
                                }
                                ]]></fx:Script>
                        </s:ItemRenderer>
                    </fx:Component>
                </s:itemRenderer>
                <s:dataProvider>
                    <s:ArrayList>
                        <hcode:ViewObject caption="Required Integration"/>
                        <hcode:ViewObject caption="    Login user" stateName="Login"/>
                        <hcode:ViewObject caption="    Dashboard" stateName="Dashboard"/>
                        <hcode:ViewObject caption="    Virtual economy" stateName="VEconomy"/>
                        <hcode:ViewObject caption="Advanced Features"/>
                        <hcode:ViewObject caption="    Current user info" stateName="Userinfo"/>
                        <hcode:ViewObject caption="    Leaderboards" stateName="Leaderboards"/>
                        <hcode:ViewObject caption="    Achievements" stateName="Achievements"/>
                        <hcode:ViewObject caption="    Social graph" stateName="Social"/>
                        <hcode:ViewObject caption="    Dashboard control" stateName="DashboardControl"/>
                        <hcode:ViewObject caption="    Cloud storage" stateName="Cloud"/>
                        <hcode:ViewObject caption="    Game settings" stateName="Settings"/>
                        <hcode:ViewObject caption="    Room cookies" stateName="RoomCookies"/>
                        <hcode:ViewObject caption="    Multiplayer Basics" stateName="Multinet"/>
                        <hcode:ViewObject caption="System Information"/>
                        <hcode:ViewObject caption="    Application info" stateName="AppInfo"/>
                    </s:ArrayList>
                </s:dataProvider>
            </s:List>
        </s:VGroup>
    </s:Panel>

    <s:Panel includeIn="Login" width="100%" height="100%" title="Login">
        <views:Login/>
    </s:Panel>
    <s:Panel includeIn="Dashboard" width="100%" height="100%" title="Dashboard">
        <views:Dashboard/>
    </s:Panel>
    <s:Panel includeIn="VEconomy" width="100%" height="100%" title="Virtual economy">
        <views:VEconomy/>
    </s:Panel>
    <s:Panel includeIn="Achievements" width="100%" height="100%" title="Achievements">
        <views:Achievements/>
    </s:Panel>
    <s:Panel includeIn="DashboardControl" width="100%" height="100%" title="Dashboard control">
        <views:DashboardControl/>
    </s:Panel>
    <s:Panel includeIn="Leaderboards" width="100%" height="100%" title="Leaderboards">
        <s:Scroller width="100%" height="100%">
            <views:Leaderboards/>
        </s:Scroller>
    </s:Panel>
    <s:Panel includeIn="Cloud" width="100%" height="100%" title="Cloud storage">
        <s:Scroller width="100%" height="100%">
            <views:Cloud/>
        </s:Scroller>
    </s:Panel>
    <s:Panel includeIn="Userinfo" width="100%" height="100%" title="User info">
        <views:Userinfo/>
    </s:Panel>
    <s:Panel includeIn="Social" width="100%" height="100%" title="Social graph">
        <views:Social/>
    </s:Panel>
    <s:Panel includeIn="RoomCookies" width="100%" height="100%" title="Room cookies">
        <s:Scroller width="100%" height="100%">
            <views:RoomCookies/>
        </s:Scroller>
    </s:Panel>
    <s:Panel includeIn="AppInfo" width="100%" height="100%" title="Application info">
        <views:AppInfo/>
    </s:Panel>
    <s:Panel includeIn="Settings" width="100%" height="100%" title="Settings info">
        <views:Settings/>
    </s:Panel>
    <s:Panel includeIn="Multinet" width="100%" height="100%" title="Multinet">
        <views:Multinet/>
    </s:Panel>

    <fx:Script><![CDATA[
        import com.playphone.multinet.MNConst;
        import com.playphone.multinet.MNDirect
        import com.playphone.multinet.MNDirectEvent
        import com.playphone.multinet.MNDirectHelper;
        import com.playphone.multinet.core.MNSession
        import com.playphone.multinet.core.MNSessionEvent
        import com.playphone.multinet.ui.MNWebUIAirStarter
        import com.playphone.multinet.ui.MNWebUIStarter;
        import com.playphone.multinet.ui.common.MNDirectButton
        import com.playphone.multinet.ui.common.MNDirectPopup
        import com.playphone.multinet.utils.MNLog

        import hcode.ViewObject;

        import mx.events.FlexEvent
        import mx.managers.PopUpManager

        import spark.events.IndexChangeEvent

        import views.Popup

        private static const GAME_ID: uint = 10900;
        private static const GAME_SECRET_PART1: uint = 0xae2b10f2;
        private static const GAME_SECRET_PART2: uint = 0x248f58d9;
        private static const GAME_SECRET_PART3: uint = 0xc9654f24;
        private static const GAME_SECRET_PART4: uint = 0x37960337;

        private function onIndexChange(event: IndexChangeEvent): void
        {
            var list: List = List(event.currentTarget);
            list.selectedItems = null;
            list.selectedIndices = null;
            var obj: ViewObject = list.dataProvider.getItemAt(event.newIndex) as ViewObject;
            currentState = obj.stateName;
        }

        public static function showMessage(parent: DisplayObject, message: String): void
        {
            var win: Popup = Popup(PopUpManager.createPopUp(parent, Popup, true));
            win.mesage.text = message;
            PopUpManager.centerPopUp(win);
        }

        private function initializeHandler(event: FlexEvent): void
        {
            addEventListener(Event.ADDED_TO_STAGE, onStageAdd);
        }

        private function onStageAdd(event: Event): void
        {
            MNDirect.init(GAME_ID, MNDirect.makeGameSecretByComponents(GAME_SECRET_PART1,
                                                                       GAME_SECRET_PART2,
                                                                       GAME_SECRET_PART3,
                                                                       GAME_SECRET_PART4));
            MNDirect.attachUI(new MNWebUIAirStarter(this.stage));
            MNDirectPopup.init(MNDirectPopup.MNDIRECTPOPUP_NEW_HI_SCORES | MNDirectPopup.MNDIRECTPOPUP_ACHIEVEMENTS |
                               MNDirectPopup.MNDIRECTPOPUP_WELCOME, this.stage);
            MNDirectButton.init(MNDirectButton.MNDIRECTBUTTON_TOPRIGHT, this.stage);
            MNDirectButton.visible = true;
            MNDirect.addEventListener(MNDirectEvent.onDirectSessionReady, onDirectReady);
        }

        private function onDirectReady(event: MNDirectEvent): void
        {
            MNDirectHelper.enableOutline();
            MNSession.instance.addEventListener(MNSessionEvent.onErrorOccurred, onError);
            MNSession.instance.addEventListener(MNSessionEvent.onSessionStatusChanged, onSessionStatusChangedHandler);
        }

        private function onSessionStatusChangedHandler(event: MNSessionEvent): void
        {
            var sessionStatus: int = event.params.sessionStatus;
            if (sessionStatus == MNConst.MN_IN_GAME_PLAY)
            {
                currentState = "Multinet";
            }
        }

        private function onError(event: MNSessionEvent): void
        {
            if (event._isError)
            {
                showMessage(this, event._errMsg);
            }
        }
        ]]></fx:Script>
</s:Application>