<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:views="views.*"
               initialize="initializeHandler(event)" width="100%" height="100%">

    <fx:Style>
        .mainVGroup {
            paddingLeft: "5";
            paddingTop: "5";
            paddingRight: "5"
        }

        .mainButton {
            fontSize: 15px;
            /* chromeColor:"blue"; */
        }

        .mainPanel {
            paddingTop: 5px;
            /* chromeColor:"blue"; */
        }
    </fx:Style>
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>

    <s:states>
        <s:State name="Home"/>
        <s:State name="Login"/>
        <s:State name="Dashboard"/>
        <s:State name="VEconomy"/>
        <s:State name="Achievements"/>
        <s:State name="DashboardControl"/>
        <s:State name="Leaderboards"/>
        <s:State name="Cloud"/>
        <s:State name="Userinfo"/>
        <s:State name="Multinet"/>
        <s:State name="Social"/>
        <s:State name="AppInfo"/>
        <s:State name="Settings"/>
    </s:states>

    <s:Group styleName="mainPanel"
             includeIn="Login, Dashboard, VEconomy, Achievements, DashboardControl, Leaderboards, Cloud, Userinfo, Multinet, Social, AppInfo, Settings"
             width="100%">
        <s:Button label="Go home" styleName="mainButton" left="5" top="5"
                  includeIn="Login, Dashboard, VEconomy, Achievements, DashboardControl, Leaderboards, Cloud, Userinfo, Multinet, Social, AppInfo, Settings"
                  click="currentState='Home'">
        </s:Button>
    </s:Group>

    <s:Panel includeIn="Home" width="100%" height="100%" title="Home">
        <s:VGroup width="100%" height="100%">
            <s:List id="list" dragEnabled="true" width="100%" height="100%" change="onIndexChange(event)">
                <s:itemRenderer>
                    <fx:Component>
                        <s:ItemRenderer>
                            <s:states>
                                <s:State name="normal"/>
                                <s:State name="selected"/>
                            </s:states>
                            <s:Rect height="50" width="100%">
                                <s:fill>
                                    <s:SolidColor color="0x999999" alpha="0" alpha.selected="0.6"/>
                                </s:fill>
                                <s:stroke>
                                    <s:SolidColorStroke color="0xcccccc" weight="1"/>
                                </s:stroke>
                            </s:Rect>
                            <s:Label paddingLeft="10" id="caption" verticalAlign="middle" width="100%" height="50"/>
                            <fx:Script><![CDATA[
                                override public function set data(value: Object): void
                                {
                                    caption.text = value.caption;
                                }
                                ]]></fx:Script>
                        </s:ItemRenderer>
                    </fx:Component>
                </s:itemRenderer>
                <s:dataProvider>
                    <s:ArrayList>
                        <views:ViewObject caption="Login" stateName="Login"/>
                        <views:ViewObject caption="Dashboard" stateName="Dashboard"/>
                        <views:ViewObject caption="Virtual economy" stateName="VEconomy"/>
                        <views:ViewObject caption="Achievements" stateName="Achievements"/>
                        <views:ViewObject caption="Dashboard control" stateName="DashboardControl"/>
                        <views:ViewObject caption="Leaderboards" stateName="Leaderboards"/>
                        <views:ViewObject caption="Cloud storage" stateName="Cloud"/>
                        <views:ViewObject caption="User info" stateName="Userinfo"/>
                        <views:ViewObject caption="Multinet basics" stateName="Multinet"/>
                        <views:ViewObject caption="Social graph" stateName="Social"/>
                        <views:ViewObject caption="Application info" stateName="AppInfo"/>
                        <views:ViewObject caption="Settings info" stateName="Settings"/>
                    </s:ArrayList>
                </s:dataProvider>
            </s:List>
        </s:VGroup>
    </s:Panel>

    <s:Panel includeIn="Login" width="100%" height="100%" title="Login">
        <views:Login/>
    </s:Panel>
    <s:Panel includeIn="Dashboard" width="100%" height="100%" title="Dashboard">
        <views:Dashboard/>
    </s:Panel>
    <s:Panel includeIn="VEconomy" width="100%" height="100%" title="Virtual economy">
        <views:VEconomy/>
    </s:Panel>
    <s:Panel includeIn="Achievements" width="100%" height="100%" title="Achievements">
        <views:Achievements/>
    </s:Panel>
    <s:Panel includeIn="DashboardControl" width="100%" height="100%" title="Dashboard control">
        <views:DashboardControl/>
    </s:Panel>
    <s:Panel includeIn="Leaderboards" width="100%" height="100%" title="Leaderboards">
        <views:Leaderboards/>
    </s:Panel>
    <s:Panel includeIn="Cloud" width="100%" height="100%" title="Cloud storage">
        <views:Cloud/>
    </s:Panel>
    <s:Panel includeIn="Userinfo" width="100%" height="100%" title="User info">
        <views:Userinfo/>
    </s:Panel>
    <s:Panel includeIn="Multinet" width="100%" height="100%" title="Multinet basics">
        <views:Multinet/>
    </s:Panel>
    <s:Panel includeIn="Social" width="100%" height="100%" title="Social graph">
        <views:Social/>
    </s:Panel>
    <s:Panel includeIn="AppInfo" width="100%" height="100%" title="Application info">
        <views:AppInfo/>
    </s:Panel>

    <s:Panel includeIn="Settings" width="100%" height="100%" title="Settings info">
        <views:Settings/>
    </s:Panel>

    <fx:Script><![CDATA[
        import com.playphone.multinet.MNDirect
        import com.playphone.multinet.MNDirectEvent
        import com.playphone.multinet.core.MNSession
        import com.playphone.multinet.core.MNSessionEvent
        import com.playphone.multinet.ui.MNWebUIAirStarter
        import com.playphone.multinet.ui.MNWebUIStarter
        import com.playphone.multinet.ui.common.MNDirectButton
        import com.playphone.multinet.ui.common.MNDirectPopup
        import com.playphone.multinet.utils.MNLog

        import mx.events.FlexEvent
        import mx.managers.PopUpManager

        import spark.events.IndexChangeEvent

        import views.Popup

        private function onIndexChange(event: IndexChangeEvent): void
        {
            var list: List = List(event.currentTarget);
            list.selectedItems = null;
            list.selectedIndices = null;
            var obj: ViewObject = list.dataProvider.getItemAt(event.newIndex) as ViewObject;
            currentState = obj.stateName;
        }

        public static function showMessage(parent: DisplayObject, message: String): void
        {
            var win: Popup = Popup(PopUpManager.createPopUp(parent, Popup, true));
            win.mesage.text = message;
            PopUpManager.centerPopUp(win);
        }

        private function initializeHandler(event: FlexEvent): void
        {
            addEventListener(Event.ADDED_TO_STAGE, resizeHandler);
        }

        private function resizeHandler(event: Event): void
        {
            MNLog.isDebug = true;
            MNDirect.init(10900, "ae2b10f2-248f58d9-c9654f24-37960337");
//            MNDirect.init(5, "00000005-00000005-00000005-00000005");
            MNDirect.attachUI(new MNWebUIAirStarter(this.stage));
            MNDirectPopup.init(MNDirectPopup.MNDIRECTPOPUP_NEW_HI_SCORES | MNDirectPopup.MNDIRECTPOPUP_ACHIEVEMENTS |
                               MNDirectPopup.MNDIRECTPOPUP_WELCOME, this.stage);
            MNDirectButton.init(MNDirectButton.MNDIRECTBUTTON_TOPRIGHT, this.stage);
            MNDirectButton.visible = true;
            //            MNDirect.addEventListener(MNDirectEvent.onDoStartGameWithParams, onStartGame);
            //            MNDirect.addEventListener(MNDirectEvent.onErrorOccurred, onCancelGame);
            //            MNDirect.addEventListener(MNDirectEvent.onDoCancelGame, onCancelGame);
            //            MNDirect.addEventListener(MNDirectEvent.onDoFinishGame, onFinishGame);
            MNDirect.addEventListener(MNDirectEvent.onDirectSessionReady, onDirectReady);
        }

        private function onDirectReady(event: MNDirectEvent): void
        {
            MNSession.instance.addEventListener(MNSessionEvent.onErrorOccurred, onError);
        }

        private function onError(event: MNSessionEvent): void
        {
            if (event._isError)
            {
                showMessage(this, event._errMsg);
            }
        }
        ]]></fx:Script>
</s:Application>