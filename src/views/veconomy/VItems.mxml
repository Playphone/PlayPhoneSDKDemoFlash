<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" initialize="initializeHandler(event)">

    <s:states>
        <s:State name="Items"/>
        <s:State name="Currencies"/>
    </s:states>

    <s:TabBar width="100%" includeIn="Items, Currencies" change="tabBar1_changeHandler(event)">
        <mx:ArrayCollection>
            <fx:String>Virtual items</fx:String>
            <fx:String>Virtual currencies</fx:String>
        </mx:ArrayCollection>
    </s:TabBar>

    <s:List id="items_list" includeIn="Items" initialize="markReady(0)" dragEnabled="true" width="100%"
            height="100%">
        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer>
                    <s:Rect left="0" right="0" top="2" bottom="0" height="35" width="100%">
                        <s:fill>
                            <s:SolidColor color="0x999999" alpha="0"/>
                        </s:fill>
                    </s:Rect>
                    <s:HGroup>
                        <s:Label id="item_id"/>
                        <s:Label id="item_name"/>
                    </s:HGroup>

                    <fx:Script><![CDATA[
                        override public function set data(value: Object): void
                        {
                            item_id.text = value.id;
                            item_name.text = value.name;
                        }
                        ]]></fx:Script>
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:List>

    <s:List id="currencies_list" includeIn="Currencies" initialize="markReady(1)" dragEnabled="true" width="100%"
            height="100%">
        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer>
                    <s:Rect left="0" right="0" top="2" bottom="0" height="35" width="100%">
                        <s:fill>
                            <s:SolidColor color="0x999999" alpha="0"/>
                        </s:fill>
                    </s:Rect>
                    <s:HGroup>
                        <s:Label id="cur_id"/>
                        <s:Label id="cur_name"/>
                    </s:HGroup>

                    <fx:Script><![CDATA[
                        override public function set data(value: Object): void
                        {
                            cur_id.text = value.id;
                            cur_name.text = value.name;
                        }
                        ]]></fx:Script>
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:List>

    <fx:Script><![CDATA[
        import com.playphone.multinet.MNDirect
        import com.playphone.multinet.MNDirectEvent
        import com.playphone.multinet.providers.MNVitemsProvider

        import mx.collections.ArrayList

        import mx.events.FlexEvent

        import spark.events.IndexChangeEvent

        private var isSessionReady: Boolean = false;
        private var isStateReady: Array = [false, false];
        private var updateFunctions: Vector.<Function>

        private function initializeHandler(event: FlexEvent): void
        {
            updateFunctions = new Vector.<Function>();
            updateFunctions.push(updateItems);
            updateFunctions.push(updateCurrencies);

            if (MNDirect.getSession() == null)
            {
                MNDirect.addEventListener(MNDirectEvent.onDirectSessionReady, onSessionReady);
            }
            else
            {
                onSessionReady(null);
            }
        }

        private function markReady(state_id: int): void
        {
            isStateReady[state_id] = true;
            updateState(state_id);
        }

        private function updateState(state: int): void
        {
            if (isSessionReady && isStateReady[state])
            {
                updateFunctions[state]();
            }
        }

        private function updateItems(): void
        {
            var currencies: Array = [];

            var items: Array = MNDirect.virtualItemsProvider.getGameVItemsList();
            for each(var item: Object in items)
            {
                if ((item.model & 1) == 0)
                {
                    currencies.push( item );
                }
            }

            items_list.dataProvider = new ArrayList( currencies );
        }

        private function updateCurrencies(): void
        {
            var currencies: Array = [];

            var items: Array = MNDirect.virtualItemsProvider.getGameVItemsList();
            for each(var item: Object in items)
            {
                if ((item.model & 1) != 0)
                {
                    currencies.push( item );
                }
            }

            currencies_list.dataProvider = new ArrayList( currencies );

        }

        private function tabBar1_changeHandler(event: IndexChangeEvent): void
        {
            if (isSessionReady)
            {
                currentState = states[event.newIndex].name;
                updateState(event.newIndex);
            }
        }

        private function onSessionReady(event: MNDirectEvent): void
        {
            if (MNDirect.virtualShopProvider.isVShopInfoNeedUpdate())
            {
                MNDirect.virtualItemsProvider.addEventListener(MNVitemsProvider.onVItemsListUpdated, onInfoUpdated);
                MNDirect.virtualItemsProvider.doGameVItemsListUpdate();
            }
            else
            {
                isSessionReady = true;
                updateState(0);
            }
        }

        private function onInfoUpdated(event: Event): void
        {
            isSessionReady = true;
            updateState(0);
        }
        ]]></fx:Script>
</s:VGroup>