<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          initialize="initializeHandler(event)" width="100%"
          paddingLeft="5" paddingTop="5" paddingRight="5" gap="5"
         >
    <s:TextInput id="ach_id"/>
    <s:Button width="100%" click="button1_clickHandler(event)" label="Unlock achievement"/>
    <s:List id="achievements_list" dragEnabled="true" width="100%" height="100%">
        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer>
                    <s:Rect id="item_bkg" height="50" width="100%">
                        <s:fill>
                            <s:SolidColor color="0x999999" alpha="0"/>
                        </s:fill>
                        <s:stroke>
                            <s:SolidColorStroke color="0xcccccc" weight="1"/>
                        </s:stroke>
                    </s:Rect>
                    <s:HGroup>
                        <s:Label id="achievement_id" verticalAlign="middle" height="50"/>
                        <s:Label id="achievement_name" verticalAlign="middle" height="50"/>
                    </s:HGroup>

                    <fx:Script><![CDATA[
                        override public function set data(value: Object): void
                        {
                            achievement_id.text = value.id;
                            achievement_name.text = value.name;
                        }
                        ]]></fx:Script>
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:List>
    <fx:Script><![CDATA[
        import com.playphone.multinet.MNDirect
        import com.playphone.multinet.MNDirectEvent
        import com.playphone.multinet.providers.MNAchievementsProvider

        import mx.collections.ArrayCollection

        import mx.events.FlexEvent

        private function initializeHandler(event: FlexEvent): void
        {
            if (MNDirect.getSession() != null)
            {
                checkAchievements();
            }
            else
            {
                MNDirect.addEventListener(MNDirectEvent.onDirectSessionReady, onSessionReady);
            }
        }

        private function checkAchievements(): void
        {
            if (MNDirect.achievementsProvider.isGameAchievementListNeedUpdate)
            {
                MNDirect.achievementsProvider.addEventListener(MNAchievementsProvider.onGameAchievementListDownloaded,
                                                               onListUpdated);
                MNDirect.achievementsProvider.doGameAchievementListUpdate();
            }
            else
            {
                fillAchievements();
            }
        }

        private function fillAchievements(): void
        {
            achievements_list.dataProvider = new ArrayCollection(MNDirect.achievementsProvider.getGameAchievementsList());
        }

        private function onSessionReady(event: MNDirectEvent): void
        {
            checkAchievements();
        }

        private function onListUpdated(event: Event): void
        {
            fillAchievements();
        }

        private function button1_clickHandler(event: MouseEvent): void
        {
            MNDirect.achievementsProvider.unlockPlayerAchievement(int(ach_id.text));
        }
        ]]></fx:Script>
</s:VGroup>
