<?xml version="1.0"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          width="100%"
          paddingLeft="5" paddingTop="5" paddingRight="5" gap="5"
        >
    <s:Button width="100%" click="button1_clickHandler(event)">Get it!</s:Button>
    <s:List id="list" dragEnabled="true" width="100%" height="100%">
        <s:itemRenderer>
            <fx:Component>
                <s:ItemRenderer>
                    <s:states>
                        <s:State name="normal"/>
                        <s:State name="hovered"
                                 enterState="state1_enterStateHandler(event)"
                                 exitState="state1_exitStateHandler(event)"/>
                        <s:State name="selected"
                                 enterState="state1_enterStateHandler(event)"
                                 exitState="state1_exitStateHandler(event)"/>
                    </s:states>
                    <s:Rect height="50" width="100%">
                        <s:fill>
                            <s:SolidColor color="0x999999" alpha="0"/>
                        </s:fill>
                        <s:stroke>
                            <s:SolidColorStroke color="0xcccccc" weight="1"/>
                        </s:stroke>
                    </s:Rect>
                    <s:HGroup height="50" verticalAlign="middle">
                        <s:Image id="user_avatar" height="50"/>
                        <s:VGroup verticalAlign="middle">
                            <s:Label id="user_name" verticalAlign="top"/>
                            <s:Label id="user_online" verticalAlign="bottom"/>
                        </s:VGroup>
                    </s:HGroup>

                    <fx:Script><![CDATA[
                        import com.playphone.multinet.core.data.MNWSBuddyListItem

                        import mx.events.FlexEvent;

                        import views.controls.FriendRenderer;

                        private var user_data: Object;
                        private var additional: FriendRenderer;

                        override public function set data(value: Object): void
                        {
                            user_data = value;
                            var friend: MNWSBuddyListItem = value as MNWSBuddyListItem;
                            user_name.text = friend.friend_user_nick_name;
                            user_online.text = friend.friend_user_online_now ? "online" : "offline";
                            user_avatar.source = friend.friend_user_avatar_url;
                        }

                        private function state1_enterStateHandler(event: FlexEvent): void
                        {
                            additional = new FriendRenderer();
                            addElement(additional);
                            additional.y = 55;
                            additional.data = user_data;
                        }

                        private function state1_exitStateHandler(event: FlexEvent): void
                        {
                            removeElement(additional);
                        }
                        ]]></fx:Script>
                </s:ItemRenderer>
            </fx:Component>
        </s:itemRenderer>
    </s:List>
    <fx:Script><![CDATA[
        import com.playphone.multinet.core.data.MNWSBuddyListItem
        import com.playphone.multinet.core.ws.MNWSDefHandlerEvent
        import com.playphone.multinet.core.ws.MNWSRequestContent
        import com.playphone.multinet.core.ws.MNWSRequestDefHandler
        import com.playphone.multinet.core.ws.MNWSRequestSender

        import mx.collections.ArrayList

        private var req_block: String;

        private function button1_clickHandler(event: MouseEvent): void
        {
            var handler: MNWSRequestDefHandler = new MNWSRequestDefHandler();
            handler.addEventListener(MNWSDefHandlerEvent.onRequestComplete, onComplete);
            handler.addEventListener(MNWSDefHandlerEvent.onRequestError, onError);

            var content: MNWSRequestContent = new MNWSRequestContent();
            req_block = content.addCurrUserBuddyList();

            MNWSRequestSender.instance.sendRequest(content, handler);
        }

        private function onError(event: MNWSDefHandlerEvent): void
        {
            CrossDemoFlash.showMessage(this, event.params.message);
        }

        private function onComplete(event: MNWSDefHandlerEvent): void
        {
            var buddies: Array = vectorToArray(event.params[req_block] as Vector.<MNWSBuddyListItem>);
            list.dataProvider = new ArrayList(buddies);
        }

        private function vectorToArray(v: Object): Array
        {
            var len: int = v.length;
            var ret: Array = new Array(len);
            for (var i: int = 0; i < len; ++i)
            {
                ret[i] = v[i];
            }
            return ret;
        }
        ]]></fx:Script>
</s:VGroup>